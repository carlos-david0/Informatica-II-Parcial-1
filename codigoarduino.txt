//defino pines para el 74hc595 de las filas(1)
int relojF = 7;
int latchF = 5;
int dataF = 6;
//defino pines para el 74hc595 de las columnas(0)
int relojC = 3;
int latchC = 4;
int dataC = 2;

void verificacion(unsigned short int tiempo, unsigned short int iteraciones) {
  for (unsigned short int i = 0; i < iteraciones; i++){
	digitalWrite(latchC, LOW);
    shiftOut(dataC, relojC, LSBFIRST, 0); 
    digitalWrite(latchC, HIGH);
    digitalWrite(latchF, LOW);
    shiftOut(dataF, relojF, LSBFIRST, 255);
    digitalWrite(latchF, HIGH);
    delay(tiempo*1000);
    digitalWrite(latchF, LOW);
    shiftOut(dataF, relojF, LSBFIRST, 0);
    digitalWrite(latchF, HIGH);
    delay(tiempo*1000);
  }
}

//Funciones que generan las matrices de los patrones,retornan la direcciÃ³n de memoria
bool** patron_1()
{
    bool** patron_1= new bool*[8];
    for(short j=0;j<8;j++){
        patron_1[j]= new bool[8];
    }
    short lim_superior=4, lim_inferior=3;
    while(lim_superior<8){
        for (short i=0;i<4;i++){
            for(short j=0;j<8;j++){
                if(j<=lim_superior && j>=lim_inferior){
                    patron_1[i][j]=1;
		    patron_1[7-i][j]=1;
                }
                else{
                    patron_1[i][j]=0;
		    patron_1[7-i][j]=0;
                }
            }
            lim_inferior--;
            lim_superior++;
        }
    }
    return patron_1;
}

bool** patron_2()
{
    bool** patron_2= new bool*[8];
    for(short j=0;j<8;j++){
        patron_2[j]= new bool[8];
    }
    for(short i=0;i<4;i++){
        for(short j=7;j>=4;j--){
            patron_2[i][i]=1;
	    patron_2[7-i][i]=1;
          if(j+i==7){
                patron_2[i][j]=1;
		patron_2[7-i][j]=1;
          }
          else{
                patron_2[i][j]=0;
		patron_2[7-i][j]=0;
          }
        }
    }
    return patron_2;
}

bool** patron_3()
{
    bool** patron_3= new bool*[8];
    for(short i=0;i<4;i++){
        patron_3[i]= new bool[8];
        for (short j=0;j<8; j++) {
            patron_3[i][j]= 0; 
        }    
    for(short i=0;i<3;i+=2){
        for(short j=i/2;j<8;j+=3){
            patron_3[i][j]=1;
            patron_3[i+1][j]=1;
	    	patron_3[i+4][j]=1;
            patron_3[i+5][j]=1;
            if(j!=7){
                patron_3[i][j+1]=1;
                patron_3[i+1][j+1]=1;
		patron_3[i+4][j+1]=1;
                patron_3[i+5][j+1]=1;
            	}
        	}
    	}
    }
    return patron_3;
}

bool** patron_4(){
    bool** patron_4= new bool*[8];
    for(short i=0;i<8;i++){
        patron_4[i]= new bool[8];
        for (short j=0;j<8; j++) {
            patron_4[i][j]= 0; 
    }
    for(short i=0;i<4;i++){
        for(short j=i;j<i+4;j++){
            patron_4[i][j]=1;
	    patron_4[7-i][j]=1;
        	}
    	}
    }
    return patron_4;
}

void setup() {
  Serial.begin(9600);
  pinMode(latchC, OUTPUT);
  pinMode(relojC, OUTPUT);
  pinMode(dataC, OUTPUT);
  pinMode(latchF, OUTPUT);
  pinMode(relojF, OUTPUT);
  pinMode(dataF, OUTPUT);
}

void loop() {

}
